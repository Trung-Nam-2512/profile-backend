openapi: 3.0.3
info:
  title: Profile Blog API
  description: Backend API for profile blog with authentication and posts management
  version: 1.0.0
  contact:
    name: API Support

servers:
  - url: http://localhost:5000
    description: Development server

paths:
  # Health check
  /health:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  # Auth endpoints
  /api/auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          email:
                            type: string
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          accessToken:
                            type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Posts endpoints
  /api/v1/posts:
    get:
      tags:
        - Posts
      summary: Get published posts (public)
      parameters:
        - name: published
          in: query
          schema:
            type: string
            enum: ['true', 'false']
            default: 'true'
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: q
          in: query
          description: Search query for text search in title and content
          schema:
            type: string
        - name: tag
          in: query
          description: Filter posts by tag
          schema:
            type: string
      responses:
        '200':
          description: Posts retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          posts:
                            type: array
                            items:
                              $ref: '#/components/schemas/PostListItem'
                          total:
                            type: integer
                          page:
                            type: integer
                          limit:
                            type: integer

    post:
      tags:
        - Posts
      summary: Create a new post (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPostRequest'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          post:
                            $ref: '#/components/schemas/Post'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required

  /api/v1/posts/{slug}:
    get:
      tags:
        - Posts
      summary: Get post by slug (public)
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-z0-9-]+$'
      responses:
        '200':
          description: Post retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          post:
                            $ref: '#/components/schemas/Post'
        '404':
          description: Post not found

  /api/v1/posts/{id}:
    put:
      tags:
        - Posts
      summary: Update a post (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPostRequest'
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          post:
                            $ref: '#/components/schemas/Post'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Post not found

    delete:
      tags:
        - Posts
      summary: Delete a post (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Post not found

  # Profile endpoints
  /api/v1/profile:
    get:
      tags:
        - Profile
      summary: Get profile information (public)
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          profile:
                            $ref: '#/components/schemas/Profile'
        '404':
          description: Profile not found

    put:
      tags:
        - Profile
      summary: Create or update profile (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          profile:
                            $ref: '#/components/schemas/Profile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required

  # Projects endpoints
  /api/v1/projects:
    get:
      tags:
        - Projects
      summary: Get published projects (public)
      parameters:
        - name: published
          in: query
          schema:
            type: string
            enum: ['true', 'false']
            default: 'true'
        - name: featured
          in: query
          description: Filter by featured projects
          schema:
            type: string
            enum: ['true', 'false']
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: q
          in: query
          description: Search query for text search in title and content
          schema:
            type: string
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          projects:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProjectListItem'
                          total:
                            type: integer
                          page:
                            type: integer
                          limit:
                            type: integer

    post:
      tags:
        - Projects
      summary: Create a new project (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertProjectRequest'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          project:
                            $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required

  /api/v1/projects/featured:
    get:
      tags:
        - Projects
      summary: Get featured projects (public)
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 6
      responses:
        '200':
          description: Featured projects retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          projects:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProjectListItem'

  /api/v1/projects/{slug}:
    get:
      tags:
        - Projects
      summary: Get project by slug (public)
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-z0-9-]+$'
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          project:
                            $ref: '#/components/schemas/Project'
        '404':
          description: Project not found

  /api/v1/projects/{id}:
    put:
      tags:
        - Projects
      summary: Update a project (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertProjectRequest'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          project:
                            $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Project not found

    delete:
      tags:
        - Projects
      summary: Delete a project (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Project deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Project not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
      required:
        - success

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
          required:
            - code
            - message
      required:
        - success
        - error

    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - name
        - email
        - password

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - email
        - password

    UpsertPostRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        slug:
          type: string
          pattern: '^[a-z0-9-]+$'
        excerpt:
          type: string
        content:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            type: string
          default: []
        published:
          type: boolean
          default: false
      required:
        - title
        - slug
        - content

    Post:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        slug:
          type: string
        excerpt:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        published:
          type: boolean
        publishedAt:
          type: string
          format: date-time
        authorId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PostListItem:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        slug:
          type: string
        excerpt:
          type: string
        tags:
          type: array
          items:
            type: string
        published:
          type: boolean
        publishedAt:
          type: string
          format: date-time
        authorId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProfileRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
        bio:
          type: string
          minLength: 1
        contactEmail:
          type: string
          format: email
        socials:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
          default: []
        skills:
          type: array
          items:
            type: string
          default: []
        experiences:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
          default: []
      required:
        - name
        - title
        - bio

    Profile:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        title:
          type: string
        bio:
          type: string
        contactEmail:
          type: string
        socials:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        skills:
          type: array
          items:
            type: string
        experiences:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SocialLink:
      type: object
      properties:
        platform:
          type: string
        url:
          type: string
          format: uri
        username:
          type: string
      required:
        - platform
        - url

    Experience:
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        duration:
          type: string
        description:
          type: string
      required:
        - company
        - position
        - duration

    UpsertProjectRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
        slug:
          type: string
          pattern: '^[a-z0-9-]+$'
        excerpt:
          type: string
        contentMD:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            type: string
          default: []
        published:
          type: boolean
          default: false
        featured:
          type: boolean
          default: false
        links:
          $ref: '#/components/schemas/ProjectLinks'
      required:
        - title
        - slug
        - contentMD

    Project:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        slug:
          type: string
        excerpt:
          type: string
        contentMD:
          type: string
        tags:
          type: array
          items:
            type: string
        published:
          type: boolean
        featured:
          type: boolean
        publishedAt:
          type: string
          format: date-time
        links:
          $ref: '#/components/schemas/ProjectLinks'
        authorId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProjectListItem:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        slug:
          type: string
        excerpt:
          type: string
        tags:
          type: array
          items:
            type: string
        published:
          type: boolean
        featured:
          type: boolean
        publishedAt:
          type: string
          format: date-time
        links:
          $ref: '#/components/schemas/ProjectLinks'
        authorId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProjectLinks:
      type: object
      properties:
        github:
          type: string
          format: uri
        demo:
          type: string
          format: uri
        docs:
          type: string
          format: uri